// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package server

import (
	"context"

	"mini-douyin/service/message/rpc/internal/logic"
	"mini-douyin/service/message/rpc/internal/svc"
	"mini-douyin/service/message/rpc/message"
)

type DouyinRelationServiceServer struct {
	svcCtx *svc.ServiceContext
	message.UnimplementedDouyinRelationServiceServer
}

func NewDouyinRelationServiceServer(svcCtx *svc.ServiceContext) *DouyinRelationServiceServer {
	return &DouyinRelationServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *DouyinRelationServiceServer) FriendList(ctx context.Context, in *message.DouyinRelationFriendListRequest) (*message.DouyinRelationFriendListResponse, error) {
	l := logic.NewFriendListLogic(ctx, s.svcCtx)
	return l.FriendList(in)
}

func (s *DouyinRelationServiceServer) Chat(ctx context.Context, in *message.DouyinMessageChatRequest) (*message.DouyinMessageChatResponse, error) {
	l := logic.NewChatLogic(ctx, s.svcCtx)
	return l.Chat(in)
}

func (s *DouyinRelationServiceServer) Action(ctx context.Context, in *message.DouyinRelationActionRequest) (*message.DouyinRelationActionResponse, error) {
	l := logic.NewActionLogic(ctx, s.svcCtx)
	return l.Action(in)
}
