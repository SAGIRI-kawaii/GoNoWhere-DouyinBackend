// Code generated by goctl. DO NOT EDIT.
// Source: interact.proto

package server

import (
	"context"

	"mini-douyin/service/interact/rpc/interact"
	"mini-douyin/service/interact/rpc/internal/logic"
	"mini-douyin/service/interact/rpc/internal/svc"
)

type InteractServer struct {
	svcCtx *svc.ServiceContext
	interact.UnimplementedInteractServer
}

func NewInteractServer(svcCtx *svc.ServiceContext) *InteractServer {
	return &InteractServer{
		svcCtx: svcCtx,
	}
}

func (s *InteractServer) FavoriteAction(ctx context.Context, in *interact.DouyinFavoriteActionRequest) (*interact.DouyinFavoriteActionResponse, error) {
	l := logic.NewFavoriteActionLogic(ctx, s.svcCtx)
	return l.FavoriteAction(in)
}

func (s *InteractServer) FavoriteList(ctx context.Context, in *interact.DouyinFavoriteListRequest) (*interact.DouyinFavoriteListResponse, error) {
	l := logic.NewFavoriteListLogic(ctx, s.svcCtx)
	return l.FavoriteList(in)
}

func (s *InteractServer) CommentAction(ctx context.Context, in *interact.DouyinCommentActionRequest) (*interact.DouyinCommentActionResponse, error) {
	l := logic.NewCommentActionLogic(ctx, s.svcCtx)
	return l.CommentAction(in)
}

func (s *InteractServer) CommentList(ctx context.Context, in *interact.DouyinCommentListRequest) (*interact.DouyinCommentListResponse, error) {
	l := logic.NewCommentListLogic(ctx, s.svcCtx)
	return l.CommentList(in)
}
